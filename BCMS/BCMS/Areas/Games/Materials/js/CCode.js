var _0x3737 = ["\x74\x62", "\x62\x74", "\x6C\x72", "\x72\x6C", "\x72\x61\x6E\x64\x6F\x6D", "\x6C\x65\x6E\x67\x74\x68", "\x66\x6C\x6F\x6F\x72", "\x74\x69\x6C\x65", "\x70\x75\x73\x68", "\x53\x65\x63\x74\x6F\x72\x73\x43\x6F\x6D\x70\x61\x6E\x69\x65\x73", "\x43\x6C\x69\x63\x6B\x65\x73\x43\x6F\x75\x6E\x74", "\x73\x65\x63\x74\x6F\x72\x54\x79\x70\x65", "\x63\x6F\x6D\x70\x61\x6E\x79\x43\x6F\x75\x6E\x74", "\x74\x69\x6C\x65\x43\x6F\x6C\x6F\x72\x31", "\x73\x65\x74\x46\x72\x6F\x6E\x74\x43\x6F\x6C\x6F\x72", "\x74\x69\x6C\x65\x4E\x75\x6D\x62\x65\x72\x43\x6F\x6C\x6F\x72", "\x73\x65\x74\x46\x72\x6F\x6E\x74\x4E\x75\x6D\x62\x65\x72\x43\x6F\x6C\x6F\x72", "\x74\x69\x6C\x65\x4E\x75\x6D\x62\x65\x72\x43\x6F\x6C\x6F\x72\x32", "\x73\x65\x74\x53\x74\x61\x72\x74\x41\x74", "\x73\x65\x74\x46\x6C\x69\x70\x4D\x65\x74\x68\x6F\x64", "\x2F\x41\x72\x65\x61\x73\x2F\x47\x61\x6D\x65\x73\x2F\x4D\x61\x74\x65\x72\x69\x61\x6C\x73\x2F\x43\x6F\x6D\x70\x61\x6E\x69\x65\x73\x49\x6D\x61\x67\x65\x73\x4E\x61\x6D\x65\x2F", "\x2E\x70\x6E\x67", "\x73\x65\x74\x42\x61\x63\x6B\x43\x6F\x6E\x74\x65\x6E\x74\x49\x6D\x61\x67\x65", "\x69\x6D\x67\x6E\x6F", "\x74\x69\x6C\x65\x4E\x75\x6D\x62\x65\x72\x43\x6F\x6C\x6F\x72\x35", "\x2F\x41\x72\x65\x61\x73\x2F\x47\x61\x6D\x65\x73\x2F\x4D\x61\x74\x65\x72\x69\x61\x6C\x73\x2F\x43\x6F\x6D\x70\x61\x6E\x69\x65\x73\x49\x6D\x61\x67\x65\x73\x43\x6F\x64\x65\x2F", "\x70\x6F\x70", "\x65\x6D\x70\x74\x79", "\x23\x62\x6F\x61\x72\x64", "\x66\x72\x6F\x6E\x74\x4E\x75\x6D\x62\x65\x72", "\x67\x65\x74\x48\x54\x4D\x4C", "\x61\x70\x70\x65\x6E\x64", "\x72\x65\x76\x65\x72\x74\x46\x6C\x69\x70", "\x67\x65\x74\x46\x6C\x69\x70\x70\x65\x64", "\x67\x65\x74\x53\x74\x61\x72\x74\x41\x74", "\x66\x6C\x69\x70", "\x72\x65\x76\x65\x61\x6C\x54\x69\x6C\x65\x73\x28", "\x29", "\x70\x6C\x61\x79", "\x2F\x73\x6F\x75\x6E\x64\x73\x2F\x70\x6F\x6F\x6C", "\x6F\x67\x67", "\x6D\x70\x33", "\x6D\x34\x61", "\x2F\x73\x6F\x75\x6E\x64\x73\x2F\x73\x69\x6E\x67\x6C\x65", "\x61\x75\x64\x69\x6F\x45\x6E\x67\x69\x6E\x65", "\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x42\x79\x49\x64", "\x73\x72\x63", "\x54\x69\x63\x6B\x28\x29", "\x3A", "\x69\x6E\x6E\x65\x72\x48\x54\x4D\x4C", "\x30", "", "\x73\x71\x72", "\x25\x20", "\x72\x6F\x75\x6E\x64", "\x63\x73\x73", "\x2E\x53\x63\x6F\x72\x65\x4C\x6F\x61\x64\x69\x6E\x67", "\x6E\x43\x6C\x69\x63\x6B\x73", "\x74\x69\x6C\x65\x73\x5B", "\x5D\x2E\x72\x65\x76\x65\x72\x74\x46\x6C\x69\x70\x28\x29", "\x73\x75\x62\x73\x74\x72\x69\x6E\x67", "\x69\x64", "\x61\x64\x64\x46\x6C\x69\x70\x43\x6F\x6D\x70\x6C\x65\x74\x65\x43\x61\x6C\x6C\x62\x61\x63\x6B", "\x63\x6C\x69\x63\x6B", "\x64\x69\x76\x2E\x74\x69\x6C\x65", "\x68\x69\x64\x65\x54\x69\x6C\x65\x73\x28\x20\x66\x75\x6E\x63\x74\x69\x6F\x6E\x28\x29\x20\x7B\x20\x6F\x6E\x50\x65\x65\x6B\x43\x6F\x6D\x70\x6C\x65\x74\x65\x28\x29\x3B\x20\x7D\x29", "\x74\x69\x6D", "\x72\x65\x76\x65\x61\x6C\x54\x69\x6C\x65\x73\x28\x66\x75\x6E\x63\x74\x69\x6F\x6E\x28\x29\x20\x7B\x20\x6F\x6E\x50\x65\x65\x6B\x53\x74\x61\x72\x74\x28\x29\x3B\x20\x7D\x29", "\x23\x62\x74\x6E\x64\x6F\x6E\x65", "\x72\x65\x61\x64\x79", "\x62\x69\x6E\x64", "\x23\x62\x74\x74", "\x23\x64\x69\x76\x4F\x6B\x41\x6C\x65\x72\x74", "\x23\x6C\x69\x4E\x65\x77"]; var tiles = new Array(), flips = new Array(_0x3737[0], _0x3737[1], _0x3737[2], _0x3737[3]), iFlippedTile = null, iTileBeingFlippedId = null, tileAllocation = [], iTimer = 0, iInterval = 100, iPeekTime = 0, state = false, tValue, timer_is_on = 0, rnew_game = true, Timer, TotalSeconds, TimeStr, Seconds, Minutes, curTile, totalTiles = 0, allCkicks = 0, tileLength = 0, sectorArray = new Array(), sectorArrayData = new Array(), sectorsData = [1, 12, 15, 14, 14, 3, 17, 6, 36, 8, 15, 17, 9, 5, 4, 4], TileNum, soundeffect = true, PickCopmlete = false, GameType, newSC = 237, bheight = 264, ArrayTest = [], filpEnd = false; function getRandomImageForTile() { var _0x8275x22 = Math[_0x3737[6]]((Math[_0x3737[4]]() * sectorArray[_0x3737[5]])); for (var _0x8275x23 = 0; _0x8275x23 < tileAllocation[_0x3737[5]]; _0x8275x23++) { if (_0x8275x22 == tileAllocation[_0x8275x23]) { _0x8275x22 = Math[_0x3737[6]]((Math[_0x3737[4]]() * sectorArray[_0x3737[5]])); _0x8275x23 = 0; } }; return _0x8275x22; } function createTile(_0x8275x25) { curTile = new tile(_0x3737[7] + _0x8275x25), iRandomImage = getRandomImageForTile(); tileAllocation[_0x3737[8]](iRandomImage); if (GameType == _0x3737[9]) { curTile[_0x3737[10]] = 0; curTile[_0x3737[11]] = sectorArrayData[iRandomImage][_0x3737[11]]; curTile[_0x3737[12]] = sectorArrayData[iRandomImage][_0x3737[12]]; curTile[_0x3737[14]](_0x3737[13]); if (curTile[_0x3737[11]] == 1) { curTile[_0x3737[16]](_0x3737[15]) } else { curTile[_0x3737[16]](_0x3737[17]) }; curTile[_0x3737[18]](500 * Math[_0x3737[6]]((Math[_0x3737[4]]() * 5) + 1)); curTile[_0x3737[19]](flips[Math[_0x3737[6]]((Math[_0x3737[4]]() * 4))]); curTile[_0x3737[22]](_0x3737[20] + (sectorArray[iRandomImage]) + _0x3737[21]); curTile[_0x3737[23]] = sectorArrayData[iRandomImage][_0x3737[23]]; totalTiles = tileAllocation[_0x3737[5]]; return curTile; } else { curTile[_0x3737[10]] = 0; curTile[_0x3737[14]](_0x3737[13]); if (curTile[_0x3737[11]] == 1) { curTile[_0x3737[16]](_0x3737[15]) } else { curTile[_0x3737[16]](_0x3737[24]) }; curTile[_0x3737[18]](500 * Math[_0x3737[6]]((Math[_0x3737[4]]() * 5) + 1)); curTile[_0x3737[19]](flips[Math[_0x3737[6]]((Math[_0x3737[4]]() * 4))]); curTile[_0x3737[22]](_0x3737[20] + (sectorArray[iRandomImage]) + _0x3737[21]); curTile[_0x3737[23]] = iRandomImage; var _0x8275x26 = new tile(_0x3737[7] + (_0x8275x25 + 1)); _0x8275x26[_0x3737[10]] = 0; _0x8275x26[_0x3737[14]](_0x3737[13]); if (_0x8275x26[_0x3737[11]] == 1) { _0x8275x26[_0x3737[16]](_0x3737[15]) } else { _0x8275x26[_0x3737[16]](_0x3737[17]) }; _0x8275x26[_0x3737[18]](500 * Math[_0x3737[6]]((Math[_0x3737[4]]() * 5) + 1)); _0x8275x26[_0x3737[19]](flips[Math[_0x3737[6]]((Math[_0x3737[4]]() * 4))]); _0x8275x26[_0x3737[22]](_0x3737[25] + (sectorArray[iRandomImage]) + _0x3737[21]); _0x8275x26[_0x3737[23]] = iRandomImage; totalTiles = tileAllocation[_0x3737[5]]; return [curTile, _0x8275x26]; }; } function initState() { tileAllocation = new Array(sectorArray[_0x3737[5]]); while (tiles[_0x3737[5]] > 0) { tiles[_0x3737[26]]() }; $(_0x3737[28])[_0x3737[27]](); iTimer = 0; } function initTiles() { var _0x8275x25 = 0, _0x8275x29 = null; initState(); if (GameType == _0x3737[9]) { var _0x8275x23 = 1; for (_0x8275x25 = 0; _0x8275x25 < sectorArray[_0x3737[5]]; _0x8275x25 += 1) { _0x8275x29 = createTile(_0x8275x25); tiles[_0x8275x25] = _0x8275x29; }; var _0x8275x2a = []; for (_0x8275x23 = 0; _0x8275x23 < sectorArray[_0x3737[5]]; _0x8275x23++) { _0x8275x2a[_0x3737[8]](_0x8275x23) }; var _0x8275x2b = 1; while (_0x8275x2a[_0x3737[5]] > 0) { var _0x8275x2c = Math[_0x3737[6]]((Math[_0x3737[4]]() * _0x8275x2a[_0x3737[5]])); tiles[_0x8275x2a[_0x8275x2c]][_0x3737[29]] = _0x8275x2b; _0x8275x2b++; $(_0x3737[28])[_0x3737[31]](tiles[_0x8275x2a[_0x8275x2c]][_0x3737[30]]()); for (kk = _0x8275x2c; kk < _0x8275x2a[_0x3737[5]] - 1; kk++) { _0x8275x2a[kk] = _0x8275x2a[kk + 1] }; _0x8275x2a[_0x3737[26]](); }; } else { var _0x8275x23 = 1; for (_0x8275x25 = 0; _0x8275x25 < sectorArray[_0x3737[5]] * 2; _0x8275x25 += 2) { _0x8275x29 = createTile(_0x8275x25); tiles[_0x8275x25] = (_0x8275x29[0]); tiles[_0x8275x25 + 1] = (_0x8275x29[1]); }; var _0x8275x2a = []; for (_0x8275x23 = 0; _0x8275x23 < sectorArray[_0x3737[5]] * 2; _0x8275x23++) { _0x8275x2a[_0x3737[8]](_0x8275x23) }; var _0x8275x2b = 1; while (_0x8275x2a[_0x3737[5]] > 0) { var _0x8275x2c = Math[_0x3737[6]]((Math[_0x3737[4]]() * _0x8275x2a[_0x3737[5]])); tiles[_0x8275x2a[_0x8275x2c]][_0x3737[29]] = _0x8275x2b; _0x8275x2b++; $(_0x3737[28])[_0x3737[31]](tiles[_0x8275x2a[_0x8275x2c]][_0x3737[30]]()); for (kk = _0x8275x2c; kk < _0x8275x2a[_0x3737[5]] - 1; kk++) { _0x8275x2a[kk] = _0x8275x2a[kk + 1] }; _0x8275x2a[_0x3737[26]](); }; }; } function hideTiles(_0x8275x2e) { var _0x8275x25 = 0; for (_0x8275x25 = 0; _0x8275x25 < tiles[_0x3737[5]]; _0x8275x25++) { tiles[_0x8275x25][_0x3737[32]]() }; _0x8275x2e(); } function revealTiles(_0x8275x2e) { var _0x8275x25 = 0, _0x8275x30 = false; for (_0x8275x25 = 0; _0x8275x25 < tiles[_0x3737[5]]; _0x8275x25++) { if (tiles[_0x8275x25][_0x3737[33]]() == false) { if (iTimer > tiles[_0x8275x25][_0x3737[34]]()) { tiles[_0x8275x25][_0x3737[35]]() } else { _0x8275x30 = true } } }; iTimer = iTimer + iInterval; if (_0x8275x30 === true) { setTimeout(_0x3737[36] + _0x8275x2e + _0x3737[37], iInterval) } else { _0x8275x2e() }; } function sound(_0x8275x32) { if (_0x8275x32 == true) { AudioFX(_0x3737[39], { formats: [_0x3737[40], _0x3737[41], _0x3737[42]], volume: 0.1, pool: 20 })[_0x3737[38]]() } else { AudioFX(_0x3737[43], { formats: [_0x3737[40], _0x3737[41], _0x3737[42]], volume: 0.1 })[_0x3737[38]]() } } function playAudio(_0x8275x34) { var _0x8275x35 = document[_0x3737[45]](_0x3737[44]); if (_0x8275x35 !== null) { _0x8275x35[_0x3737[46]] = _0x8275x34; _0x8275x35[_0x3737[38]](); }; } function CreateTimer(_0x8275x37, _0x8275x38) { Timer = document[_0x3737[45]](_0x8275x37); TotalSeconds = _0x8275x38; Seconds = 0; TotalSeconds = 0; Tick(); if (!timer_is_on) { timer_is_on = 1; UpdateTimer(); }; } function Tick() { TotalSeconds += 1; UpdateTimer(); tValue = setTimeout(_0x3737[47], 1000); } function UpdateTimer() { Seconds = TotalSeconds; Minutes = Math[_0x3737[6]](Seconds / 60); Seconds -= Minutes * (60); TimeStr = LeadingZero(Minutes) + _0x3737[48] + LeadingZero(Seconds); Timer[_0x3737[49]] = TimeStr; } function LeadingZero(_0x8275x38) { return (_0x8275x38 < 10) ? _0x3737[50] + _0x8275x38 : _0x8275x38 + _0x3737[51] } function restTimer(_0x8275x37, _0x8275x38) { clearTimeout(tValue); Timer = document[_0x3737[45]](_0x8275x37); TotalSeconds = 0; TimeStr = LeadingZero(0) + _0x3737[48] + LeadingZero(0); Timer[_0x3737[49]] = TimeStr; } function getNewScore() { newSC = 237; var _0x8275x3e = (newSC / 264) * 100; var _0x8275x3f = 100 - _0x8275x3e; document[_0x3737[45]](_0x3737[52])[_0x3737[49]] = _0x3737[53] + Math[_0x3737[54]](_0x8275x3f); } function restNewScore() { newSC = 237; var _0x8275x3e = (newSC / 264) * 100; var _0x8275x3f = 100 - _0x8275x3e; document[_0x3737[45]](_0x3737[52])[_0x3737[49]] = _0x3737[53] + Math[_0x3737[54]](_0x8275x3f);;; $(_0x3737[56])[_0x3737[55]]({ height: newSC }); } function getAllClicks() { document[_0x3737[45]](_0x3737[57])[_0x3737[49]] = ClickesCount } function restAllClicks() { ClickesCount = 0; document[_0x3737[45]](_0x3737[57])[_0x3737[49]] = ClickesCount; } function gameScore(_0x8275x32) { $(_0x3737[56])[_0x3737[55]]({ height: _0x8275x32 }); var _0x8275x3f = ((bheight - _0x8275x32) / 264) * 100; document[_0x3737[45]](_0x3737[52])[_0x3737[49]] = _0x3737[53] + Math[_0x3737[54]](_0x8275x3f);;; if (_0x8275x3f < 0) { showGameOverHelp(); filpEnd = true; }; } function checkMatch() { if (iFlippedTile == null) { iFlippedTile = iTileBeingFlippedId } else { if (tiles[iFlippedTile][_0x3737[23]] !== tiles[iTileBeingFlippedId][_0x3737[23]]) { var _0x8275x45 = (237 / ((sectorArray[_0x3737[5]]) * 2)); newSC += (_0x8275x45 > 0 ? _0x8275x45 : 0); setTimeout(_0x3737[58] + iFlippedTile + _0x3737[59], 2000); setTimeout(_0x3737[58] + iTileBeingFlippedId + _0x3737[59], 2000); if (soundeffect == true) { sound(false) }; state = false; ClickesCount++; gameScore(newSC); } else { if (GameType == _0x3737[9]) { if (tiles[iFlippedTile][_0x3737[11]] + tiles[iTileBeingFlippedId][_0x3737[11]] > 0) { if (soundeffect == true) { sound(true) }; var _0x8275x45 = (237 / (tileLength)); newSC -= (_0x8275x45 > 0 ? _0x8275x45 : 0); state = true; if (tiles[iFlippedTile][_0x3737[11]] == 1) { tiles[iFlippedTile][_0x3737[12]] = tiles[iFlippedTile][_0x3737[12]] - 1; if (tiles[iFlippedTile][_0x3737[12]] == 1) { totalTiles = totalTiles - 2 } else { totalTiles = totalTiles - 1; setTimeout(_0x3737[58] + iFlippedTile + _0x3737[59], 2000); }; } else { tiles[iTileBeingFlippedId][_0x3737[12]] = tiles[iTileBeingFlippedId][_0x3737[12]] - 1; if (tiles[iTileBeingFlippedId][_0x3737[12]] == 1) { totalTiles = totalTiles - 2 } else { totalTiles = totalTiles - 1; setTimeout(_0x3737[58] + iTileBeingFlippedId + _0x3737[59], 2000); }; }; if (totalTiles == 0) { clearTimeout(tValue); timer_is_on = 0; }; } else { if (soundeffect == true) { sound(false) }; var _0x8275x45 = (237 / ((sectorArray[_0x3737[5]]) * 2)); newSC += (_0x8275x45 > 0 ? _0x8275x45 : 0); setTimeout(_0x3737[58] + iFlippedTile + _0x3737[59], 2000); setTimeout(_0x3737[58] + iTileBeingFlippedId + _0x3737[59], 2000); }; ClickesCount++; gameScore(newSC); } else { if (soundeffect == true) { sound(true) }; var _0x8275x45 = (237 / (sectorArray[_0x3737[5]])); newSC -= (_0x8275x45 > 0 ? _0x8275x45 : 0); ClickesCount++; gameScore(newSC); state = true; totalTiles = totalTiles - 2; if (totalTiles == 0) { clearTimeout(tValue); timer_is_on = 0; }; } }; getAllClicks(); iFlippedTile = null; iTileBeingFlippedId = null; } } function onPeekComplete() { $(_0x3737[64])[_0x3737[63]](function () { iTileBeingFlippedId = this[_0x3737[61]][_0x3737[60]](_0x3737[7][_0x3737[5]]); if (tiles[iTileBeingFlippedId][_0x3737[33]]() === false && filpEnd == false) { getAllClicks(); tiles[iTileBeingFlippedId][_0x3737[10]]++; tiles[iTileBeingFlippedId][_0x3737[62]](function () { checkMatch() }); tiles[iTileBeingFlippedId][_0x3737[35]](); }; }) } function onPeekStart() { if (PickCopmlete == true) { setTimeout(_0x3737[65], iPeekTime); restTimer(_0x3737[66], 0); CreateTimer(_0x3737[66], 0); restNewScore(); restAllClicks(); }; PickCopmlete = false; } $(document)[_0x3737[69]](function () { $(_0x3737[68])[_0x3737[63]](function () { initTiles(); setTimeout(_0x3737[67], 100); restTimer(_0x3737[66], 0); CreateTimer(_0x3737[66], 0); restNewScore(); restAllClicks(); }) }); $(document)[_0x3737[69]](function () { $(_0x3737[71])[_0x3737[70]](_0x3737[63], function () { }) }); function ClearTiles() { filpEnd = false; sectorArray[_0x3737[5]] = 0; tiles[_0x3737[5]] = 0; $(_0x3737[28])[_0x3737[27]](); } $(document)[_0x3737[69]](function () { $(_0x3737[72])[_0x3737[70]](_0x3737[63], function () { tiles[_0x3737[5]] = 0; $(_0x3737[28])[_0x3737[27]](); sectorArray[_0x3737[5]] = 0; initTiles(); setTimeout(_0x3737[67], 100); restTimer(_0x3737[66], 0); CreateTimer(_0x3737[66], 0); restNewScore(); restAllClicks(); }) }); $(document)[_0x3737[69]](function () { $(_0x3737[73])[_0x3737[70]](_0x3737[63], function () { tiles[_0x3737[5]] = 0; $(_0x3737[28])[_0x3737[27]](); initTiles(); setTimeout(_0x3737[67], 100); restTimer(_0x3737[66], 0); restNewScore(); restAllClicks(); CreateTimer(_0x3737[66], 0); }) });